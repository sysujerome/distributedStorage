syntax = "proto3";

option go_package = ".;kvstore";

package kvstore;

service Storage {
    rpc Set(SetRequest) returns (SetReply) {}
    rpc Get(GetRequest) returns (GetReply) {}
    rpc Del(DelRequest) returns (DelReply) {}
    rpc Split(SplitRequest) returns (SplitReply) {}
    rpc Scan(ScanRequest) returns (ScanReply) {}
    rpc SyncConf(SyncRequest) returns (SyncReply) {}
    rpc GetConf(ConfRequest) returns (ConfReply) {}
}

message SetRequest {
    string key = 1;
    string value = 2;
}

message SetReply {
    string err = 1;
    string status = 2;
    string result = 3;
}

message GetRequest {
    string key = 1;
}

message GetReply {
    string err = 1;
    string status = 2;
    string result = 3;
}

message DelRequest {
    string key = 1;
}

message DelReply {
    string err = 1;
    string status = 2;
    int32 result = 3;
}

message SplitRequest {
    int32 port = 1;
}

message SplitReply {
    string err = 1;
    string status = 2;
    int32 result = 3;
}

message ScanRequest {
    int32 port = 1;
}

message ScanReply {
    string err = 1;
    string status = 2;
    string result = 3;
}

message SyncRequest {
    int64 next = 1;
    int64 level = 2;
    int64 beginLevel = 3;
}

message SyncReply {
    string err = 1;
    string status = 2;
    string result = 3;
}

message ConfRequest {
    int64 noname = 1;
}

message ConfReply {
    string err = 1;
    string status = 2;
    int64 next = 3;
    int64 level = 4;
    message Server {
        required string ip = 1;
        required int64 port = 2;
        required string status = 3;
        required int64 maxKay = 4;  
    }
    repeated Server server = 5;
}